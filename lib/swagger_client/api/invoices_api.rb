=begin
#Bind ERP API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: v1.2

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require "uri"

module SwaggerClient
  class InvoicesApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Agregar Venta
    # 
    # @param new_invoice 
    # @param [Hash] opts the optional parameters
    # @return [String]
    def invoices_add_invoice(new_invoice, opts = {})
      data, _status_code, _headers = invoices_add_invoice_with_http_info(new_invoice, opts)
      return data
    end

    # Agregar Venta
    # 
    # @param new_invoice 
    # @param [Hash] opts the optional parameters
    # @return [Array<(String, Fixnum, Hash)>] String data, response status code and response headers
    def invoices_add_invoice_with_http_info(new_invoice, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: InvoicesApi.invoices_add_invoice ..."
      end
      # verify the required parameter 'new_invoice' is set
      if @api_client.config.client_side_validation && new_invoice.nil?
        fail ArgumentError, "Missing the required parameter 'new_invoice' when calling InvoicesApi.invoices_add_invoice"
      end
      # resource path
      local_var_path = "/api/Invoices"

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'text/json', 'application/xml', 'text/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'text/json', 'application/xml', 'text/xml', 'application/x-www-form-urlencoded'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(new_invoice)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'String')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InvoicesApi#invoices_add_invoice\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Registrar pago a venta
    # 
    # @param new_payment 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def invoices_add_payment(new_payment, opts = {})
      invoices_add_payment_with_http_info(new_payment, opts)
      return nil
    end

    # Registrar pago a venta
    # 
    # @param new_payment 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def invoices_add_payment_with_http_info(new_payment, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: InvoicesApi.invoices_add_payment ..."
      end
      # verify the required parameter 'new_payment' is set
      if @api_client.config.client_side_validation && new_payment.nil?
        fail ArgumentError, "Missing the required parameter 'new_payment' when calling InvoicesApi.invoices_add_payment"
      end
      # resource path
      local_var_path = "/api/Invoices/Payment"

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'text/json', 'application/xml', 'text/xml', 'application/x-www-form-urlencoded'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(new_payment)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InvoicesApi#invoices_add_payment\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Eliminar factura
    # 
    # @param id ID
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def invoices_delete_invoice(id, opts = {})
      invoices_delete_invoice_with_http_info(id, opts)
      return nil
    end

    # Eliminar factura
    # 
    # @param id ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def invoices_delete_invoice_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: InvoicesApi.invoices_delete_invoice ..."
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling InvoicesApi.invoices_delete_invoice"
      end
      # resource path
      local_var_path = "/api/Invoices/{id}".sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InvoicesApi#invoices_delete_invoice\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Obtiene la lista de ventas.
    # El filtro es opcional
    # @param [Hash] opts the optional parameters
    # @option opts [String] :filter Filters the results, based on a Boolean condition.
    # @option opts [String] :orderby Sorts the results.
    # @option opts [Integer] :top Returns only the first n results.
    # @option opts [Integer] :skip Skips the first n results.
    # @return [InvoiceListItemPage]
    def invoices_get(opts = {})
      data, _status_code, _headers = invoices_get_with_http_info(opts)
      return data
    end

    # Obtiene la lista de ventas.
    # El filtro es opcional
    # @param [Hash] opts the optional parameters
    # @option opts [String] :filter Filters the results, based on a Boolean condition.
    # @option opts [String] :orderby Sorts the results.
    # @option opts [Integer] :top Returns only the first n results.
    # @option opts [Integer] :skip Skips the first n results.
    # @return [Array<(InvoiceListItemPage, Fixnum, Hash)>] InvoiceListItemPage data, response status code and response headers
    def invoices_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: InvoicesApi.invoices_get ..."
      end
      # resource path
      local_var_path = "/api/Invoices"

      # query parameters
      query_params = {}
      query_params[:'$filter'] = opts[:'filter'] if !opts[:'filter'].nil?
      query_params[:'$orderby'] = opts[:'orderby'] if !opts[:'orderby'].nil?
      query_params[:'$top'] = opts[:'top'] if !opts[:'top'].nil?
      query_params[:'$skip'] = opts[:'skip'] if !opts[:'skip'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'text/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InvoiceListItemPage')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InvoicesApi#invoices_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Obtiene los detalles de una venta por número
    # 
    # @param id_or_number 
    # @param [Hash] opts the optional parameters
    # @return [InvoiceDetails]
    def invoices_get_by_number(id_or_number, opts = {})
      data, _status_code, _headers = invoices_get_by_number_with_http_info(id_or_number, opts)
      return data
    end

    # Obtiene los detalles de una venta por número
    # 
    # @param id_or_number 
    # @param [Hash] opts the optional parameters
    # @return [Array<(InvoiceDetails, Fixnum, Hash)>] InvoiceDetails data, response status code and response headers
    def invoices_get_by_number_with_http_info(id_or_number, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: InvoicesApi.invoices_get_by_number ..."
      end
      # verify the required parameter 'id_or_number' is set
      if @api_client.config.client_side_validation && id_or_number.nil?
        fail ArgumentError, "Missing the required parameter 'id_or_number' when calling InvoicesApi.invoices_get_by_number"
      end
      # resource path
      local_var_path = "/api/Invoices/{idOrNumber}".sub('{' + 'idOrNumber' + '}', id_or_number.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'text/json', 'application/xml', 'text/xml'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InvoiceDetails')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InvoicesApi#invoices_get_by_number\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Obtener el PDF de una venta
    # 
    # @param id ID
    # @param [Hash] opts the optional parameters
    # @return [File]
    def invoices_get_pdf(id, opts = {})
      data, _status_code, _headers = invoices_get_pdf_with_http_info(id, opts)
      return data
    end

    # Obtener el PDF de una venta
    # 
    # @param id ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(File, Fixnum, Hash)>] File data, response status code and response headers
    def invoices_get_pdf_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: InvoicesApi.invoices_get_pdf ..."
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling InvoicesApi.invoices_get_pdf"
      end
      # resource path
      local_var_path = "/api/Invoices/{id}/pdf".sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/octet-stream'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'File')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InvoicesApi#invoices_get_pdf\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Obtener el XML de una venta
    # 
    # @param id ID
    # @param [Hash] opts the optional parameters
    # @return [String]
    def invoices_get_xml(id, opts = {})
      data, _status_code, _headers = invoices_get_xml_with_http_info(id, opts)
      return data
    end

    # Obtener el XML de una venta
    # 
    # @param id ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(String, Fixnum, Hash)>] String data, response status code and response headers
    def invoices_get_xml_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: InvoicesApi.invoices_get_xml ..."
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling InvoicesApi.invoices_get_xml"
      end
      # resource path
      local_var_path = "/api/Invoices/{id}/xml".sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'text/json', 'application/xml', 'text/xml'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'String')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InvoicesApi#invoices_get_xml\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
